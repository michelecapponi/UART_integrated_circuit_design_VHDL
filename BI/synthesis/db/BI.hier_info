|BI
clk => datapath_bi:label_datapath_bi.clk
clk => fsm_bi:label_fsm_bi.clk
rst_n => fsm_bi:label_fsm_bi.rst_n
din[0] => datapath_bi:label_datapath_bi.din[0]
din[1] => datapath_bi:label_datapath_bi.din[1]
din[2] => datapath_bi:label_datapath_bi.din[2]
din[3] => datapath_bi:label_datapath_bi.din[3]
din[4] => datapath_bi:label_datapath_bi.din[4]
din[5] => datapath_bi:label_datapath_bi.din[5]
din[6] => datapath_bi:label_datapath_bi.din[6]
din[7] => datapath_bi:label_datapath_bi.din[7]
r_w_n => fsm_bi:label_fsm_bi.r_w_n
address[0] => fsm_bi:label_fsm_bi.address[0]
address[1] => fsm_bi:label_fsm_bi.address[1]
address[2] => fsm_bi:label_fsm_bi.address[2]
atn_ack => fsm_bi:label_fsm_bi.atn_ack
cs => fsm_bi:label_fsm_bi.cs
reg_rx_full => datapath_bi:label_datapath_bi.rx_full
reg_rx_full => fsm_bi:label_fsm_bi.rx_full
reg_err => datapath_bi:label_datapath_bi.err
reg_tx_empty => datapath_bi:label_datapath_bi.tx_empty
reg_tx_empty => fsm_bi:label_fsm_bi.tx_empty
en_reg_rx_full => fsm_bi:label_fsm_bi.en_rx_full
en_reg_tx_empty => fsm_bi:label_fsm_bi.en_tx_empty
reg_rx_data[0] => datapath_bi:label_datapath_bi.rx_data[0]
reg_rx_data[1] => datapath_bi:label_datapath_bi.rx_data[1]
reg_rx_data[2] => datapath_bi:label_datapath_bi.rx_data[2]
reg_rx_data[3] => datapath_bi:label_datapath_bi.rx_data[3]
reg_rx_data[4] => datapath_bi:label_datapath_bi.rx_data[4]
reg_rx_data[5] => datapath_bi:label_datapath_bi.rx_data[5]
reg_rx_data[6] => datapath_bi:label_datapath_bi.rx_data[6]
reg_rx_data[7] => datapath_bi:label_datapath_bi.rx_data[7]
reg_tx_data[0] << datapath_bi:label_datapath_bi.data_out[0]
reg_tx_data[1] << datapath_bi:label_datapath_bi.data_out[1]
reg_tx_data[2] << datapath_bi:label_datapath_bi.data_out[2]
reg_tx_data[3] << datapath_bi:label_datapath_bi.data_out[3]
reg_tx_data[4] << datapath_bi:label_datapath_bi.data_out[4]
reg_tx_data[5] << datapath_bi:label_datapath_bi.data_out[5]
reg_tx_data[6] << datapath_bi:label_datapath_bi.data_out[6]
reg_tx_data[7] << datapath_bi:label_datapath_bi.data_out[7]
reg_ctrl_data[0] << datapath_bi:label_datapath_bi.data_out[0]
reg_ctrl_data[1] << datapath_bi:label_datapath_bi.data_out[1]
atn << fsm_bi:label_fsm_bi.atn
dout[0] << datapath_bi:label_datapath_bi.dout[0]
dout[1] << datapath_bi:label_datapath_bi.dout[1]
dout[2] << datapath_bi:label_datapath_bi.dout[2]
dout[3] << datapath_bi:label_datapath_bi.dout[3]
dout[4] << datapath_bi:label_datapath_bi.dout[4]
dout[5] << datapath_bi:label_datapath_bi.dout[5]
dout[6] << datapath_bi:label_datapath_bi.dout[6]
dout[7] << datapath_bi:label_datapath_bi.dout[7]
rst_n_regs << fsm_bi:label_fsm_bi.rst_n_regs
rst_n_rx << fsm_bi:label_fsm_bi.rst_n_rx
enable_tx_data_reg << fsm_bi:label_fsm_bi.enable_tx_data_reg
enable_ctrl_reg << fsm_bi:label_fsm_bi.enable_ctrl_reg


|BI|datapath_bi:label_datapath_bi
clk => pipeline_reg_8_bits:pipe_reg.clk
rst_n => pipeline_reg_8_bits:pipe_reg.rst_n
sel => mux_2_to_1_8_bits:out_mux.sel
din[0] => pipeline_reg_8_bits:pipe_reg.reg_in[0]
din[1] => pipeline_reg_8_bits:pipe_reg.reg_in[1]
din[2] => pipeline_reg_8_bits:pipe_reg.reg_in[2]
din[3] => pipeline_reg_8_bits:pipe_reg.reg_in[3]
din[4] => pipeline_reg_8_bits:pipe_reg.reg_in[4]
din[5] => pipeline_reg_8_bits:pipe_reg.reg_in[5]
din[6] => pipeline_reg_8_bits:pipe_reg.reg_in[6]
din[7] => pipeline_reg_8_bits:pipe_reg.reg_in[7]
rx_full => mux_2_to_1_8_bits:out_mux.IN_1[2]
err => mux_2_to_1_8_bits:out_mux.IN_1[1]
tx_empty => mux_2_to_1_8_bits:out_mux.IN_1[0]
rx_data[0] => mux_2_to_1_8_bits:out_mux.IN_2[0]
rx_data[1] => mux_2_to_1_8_bits:out_mux.IN_2[1]
rx_data[2] => mux_2_to_1_8_bits:out_mux.IN_2[2]
rx_data[3] => mux_2_to_1_8_bits:out_mux.IN_2[3]
rx_data[4] => mux_2_to_1_8_bits:out_mux.IN_2[4]
rx_data[5] => mux_2_to_1_8_bits:out_mux.IN_2[5]
rx_data[6] => mux_2_to_1_8_bits:out_mux.IN_2[6]
rx_data[7] => mux_2_to_1_8_bits:out_mux.IN_2[7]
dout[0] <= mux_2_to_1_8_bits:out_mux.OUTPUT[0]
dout[1] <= mux_2_to_1_8_bits:out_mux.OUTPUT[1]
dout[2] <= mux_2_to_1_8_bits:out_mux.OUTPUT[2]
dout[3] <= mux_2_to_1_8_bits:out_mux.OUTPUT[3]
dout[4] <= mux_2_to_1_8_bits:out_mux.OUTPUT[4]
dout[5] <= mux_2_to_1_8_bits:out_mux.OUTPUT[5]
dout[6] <= mux_2_to_1_8_bits:out_mux.OUTPUT[6]
dout[7] <= mux_2_to_1_8_bits:out_mux.OUTPUT[7]
data_out[0] <= pipeline_reg_8_bits:pipe_reg.reg_out[0]
data_out[1] <= pipeline_reg_8_bits:pipe_reg.reg_out[1]
data_out[2] <= pipeline_reg_8_bits:pipe_reg.reg_out[2]
data_out[3] <= pipeline_reg_8_bits:pipe_reg.reg_out[3]
data_out[4] <= pipeline_reg_8_bits:pipe_reg.reg_out[4]
data_out[5] <= pipeline_reg_8_bits:pipe_reg.reg_out[5]
data_out[6] <= pipeline_reg_8_bits:pipe_reg.reg_out[6]
data_out[7] <= pipeline_reg_8_bits:pipe_reg.reg_out[7]


|BI|datapath_bi:label_datapath_bi|pipeline_reg_8_bits:pipe_reg
clk => reg_out[0]~reg0.CLK
clk => reg_out[1]~reg0.CLK
clk => reg_out[2]~reg0.CLK
clk => reg_out[3]~reg0.CLK
clk => reg_out[4]~reg0.CLK
clk => reg_out[5]~reg0.CLK
clk => reg_out[6]~reg0.CLK
clk => reg_out[7]~reg0.CLK
enable => reg_out[7]~reg0.ENA
enable => reg_out[6]~reg0.ENA
enable => reg_out[5]~reg0.ENA
enable => reg_out[4]~reg0.ENA
enable => reg_out[3]~reg0.ENA
enable => reg_out[2]~reg0.ENA
enable => reg_out[1]~reg0.ENA
enable => reg_out[0]~reg0.ENA
rst_n => reg_out[0]~reg0.ACLR
rst_n => reg_out[1]~reg0.ACLR
rst_n => reg_out[2]~reg0.ACLR
rst_n => reg_out[3]~reg0.ACLR
rst_n => reg_out[4]~reg0.ACLR
rst_n => reg_out[5]~reg0.ACLR
rst_n => reg_out[6]~reg0.ACLR
rst_n => reg_out[7]~reg0.ACLR
reg_in[0] => reg_out[0]~reg0.DATAIN
reg_in[1] => reg_out[1]~reg0.DATAIN
reg_in[2] => reg_out[2]~reg0.DATAIN
reg_in[3] => reg_out[3]~reg0.DATAIN
reg_in[4] => reg_out[4]~reg0.DATAIN
reg_in[5] => reg_out[5]~reg0.DATAIN
reg_in[6] => reg_out[6]~reg0.DATAIN
reg_in[7] => reg_out[7]~reg0.DATAIN
reg_out[0] <= reg_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[1] <= reg_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[2] <= reg_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[3] <= reg_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[4] <= reg_out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[5] <= reg_out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[6] <= reg_out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
reg_out[7] <= reg_out[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|BI|datapath_bi:label_datapath_bi|mux_2_to_1_8_bits:out_mux
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
sel => OUTPUT.OUTPUTSELECT
IN_1[0] => OUTPUT.DATAB
IN_1[1] => OUTPUT.DATAB
IN_1[2] => OUTPUT.DATAB
IN_1[3] => OUTPUT.DATAB
IN_1[4] => OUTPUT.DATAB
IN_1[5] => OUTPUT.DATAB
IN_1[6] => OUTPUT.DATAB
IN_1[7] => OUTPUT.DATAB
IN_2[0] => OUTPUT.DATAA
IN_2[1] => OUTPUT.DATAA
IN_2[2] => OUTPUT.DATAA
IN_2[3] => OUTPUT.DATAA
IN_2[4] => OUTPUT.DATAA
IN_2[5] => OUTPUT.DATAA
IN_2[6] => OUTPUT.DATAA
IN_2[7] => OUTPUT.DATAA
OUTPUT[0] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[1] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[2] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[3] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[4] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[5] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[6] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE
OUTPUT[7] <= OUTPUT.DB_MAX_OUTPUT_PORT_TYPE


|BI|fsm_bi:label_fsm_bi
clk => PRESENT_STATE~1.DATAIN
rst_n => PRESENT_STATE~3.DATAIN
cs => PROCESS_STATE_UPDATE.IN0
cs => PROCESS_STATE_UPDATE.IN0
address[0] => Equal0.IN2
address[0] => Equal1.IN2
address[0] => Equal2.IN1
address[0] => Equal3.IN2
address[1] => Equal0.IN1
address[1] => Equal1.IN1
address[1] => Equal2.IN2
address[1] => Equal3.IN1
address[2] => Equal0.IN0
address[2] => Equal1.IN0
address[2] => Equal2.IN0
address[2] => Equal3.IN0
r_w_n => PROCESS_STATE_UPDATE.IN1
r_w_n => PROCESS_STATE_UPDATE.IN1
atn_ack => NEXT_STATE.OUTPUTSELECT
atn_ack => NEXT_STATE.OUTPUTSELECT
atn_ack => NEXT_STATE.OUTPUTSELECT
atn_ack => NEXT_STATE.OUTPUTSELECT
atn_ack => NEXT_STATE.OUTPUTSELECT
atn_ack => Selector0.IN4
rx_full => PROCESS_STATE_UPDATE.IN0
tx_empty => PROCESS_STATE_UPDATE.IN1
en_rx_full => PROCESS_STATE_UPDATE.IN0
en_tx_empty => PROCESS_STATE_UPDATE.IN1
atn <= atn.DB_MAX_OUTPUT_PORT_TYPE
rst_n_regs <= rst_n_regs.DB_MAX_OUTPUT_PORT_TYPE
rst_n_rx <= rst_n_rx.DB_MAX_OUTPUT_PORT_TYPE
enable_tx_data_reg <= enable_tx_data_reg.DB_MAX_OUTPUT_PORT_TYPE
enable_ctrl_reg <= enable_ctrl_reg.DB_MAX_OUTPUT_PORT_TYPE
sel <= sel.DB_MAX_OUTPUT_PORT_TYPE


